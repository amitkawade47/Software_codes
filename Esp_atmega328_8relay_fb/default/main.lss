
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a4  00800100  00000b5c  00000bf0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b5c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  008001a4  008001a4  00000c94  2**0
                  ALLOC
  3 .debug_aranges 00000040  00000000  00000000  00000c94  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000106  00000000  00000000  00000cd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000526  00000000  00000000  00000dda  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002e1  00000000  00000000  00001300  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000305  00000000  00000000  000015e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000090  00000000  00000000  000018e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000018d  00000000  00000000  00001978  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d2  00000000  00000000  00001b05  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001bd7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e5       	ldi	r30, 0x5C	; 92
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
  84:	a4 3a       	cpi	r26, 0xA4	; 164
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>

0000008a <__do_clear_bss>:
  8a:	11 e0       	ldi	r17, 0x01	; 1
  8c:	a4 ea       	ldi	r26, 0xA4	; 164
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 3b       	cpi	r26, 0xBE	; 190
  96:	b1 07       	cpc	r27, r17
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 ab 00 	call	0x156	; 0x156 <main>
  9e:	0c 94 ac 05 	jmp	0xb58	; 0xb58 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <readPin>:
/********************************* READ PIN FUNCTION ************************************/

unsigned char readPin(unsigned char portPin)
{

	return (*inputPORT[portPin] & (1<<inputPin[portPin]))?1:0;
  a6:	a8 2f       	mov	r26, r24
  a8:	b0 e0       	ldi	r27, 0x00	; 0
  aa:	fd 01       	movw	r30, r26
  ac:	ee 0f       	add	r30, r30
  ae:	ff 1f       	adc	r31, r31
  b0:	e7 59       	subi	r30, 0x97	; 151
  b2:	fe 4f       	sbci	r31, 0xFE	; 254
  b4:	01 90       	ld	r0, Z+
  b6:	f0 81       	ld	r31, Z
  b8:	e0 2d       	mov	r30, r0
  ba:	80 81       	ld	r24, Z
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	a7 58       	subi	r26, 0x87	; 135
  c0:	be 4f       	sbci	r27, 0xFE	; 254
  c2:	0c 90       	ld	r0, X
  c4:	02 c0       	rjmp	.+4      	; 0xca <readPin+0x24>
  c6:	95 95       	asr	r25
  c8:	87 95       	ror	r24
  ca:	0a 94       	dec	r0
  cc:	e2 f7       	brpl	.-8      	; 0xc6 <readPin+0x20>
}
  ce:	81 70       	andi	r24, 0x01	; 1
  d0:	08 95       	ret

000000d2 <makeRelayDrive>:

/************************** RELAY DRIVE FUNCTION ***********************************/

void makeRelayDrive(unsigned char drivePort,unsigned char val)
{
	drivePort=drivePort-48;
  d2:	80 53       	subi	r24, 0x30	; 48
  	if(val=='1')
  d4:	61 33       	cpi	r22, 0x31	; 49
  d6:	c1 f4       	brne	.+48     	; 0x108 <makeRelayDrive+0x36>
  	{	
		*outputPORT[drivePort] |= 1<<outputPin[drivePort];
  d8:	a8 2f       	mov	r26, r24
  da:	b0 e0       	ldi	r27, 0x00	; 0
  dc:	fd 01       	movw	r30, r26
  de:	ee 0f       	add	r30, r30
  e0:	ff 1f       	adc	r31, r31
  e2:	ef 57       	subi	r30, 0x7F	; 127
  e4:	fe 4f       	sbci	r31, 0xFE	; 254
  e6:	01 90       	ld	r0, Z+
  e8:	f0 81       	ld	r31, Z
  ea:	e0 2d       	mov	r30, r0
  ec:	20 81       	ld	r18, Z
  ee:	ab 56       	subi	r26, 0x6B	; 107
  f0:	be 4f       	sbci	r27, 0xFE	; 254
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	0c 90       	ld	r0, X
  f8:	02 c0       	rjmp	.+4      	; 0xfe <makeRelayDrive+0x2c>
  fa:	88 0f       	add	r24, r24
  fc:	99 1f       	adc	r25, r25
  fe:	0a 94       	dec	r0
 100:	e2 f7       	brpl	.-8      	; 0xfa <makeRelayDrive+0x28>
 102:	28 2b       	or	r18, r24
 104:	20 83       	st	Z, r18
 106:	08 95       	ret
	}
	else if (val=='0')
 108:	60 33       	cpi	r22, 0x30	; 48
 10a:	c1 f4       	brne	.+48     	; 0x13c <makeRelayDrive+0x6a>
	{
		*outputPORT[drivePort]  &= ~(1<<outputPin[drivePort]);
 10c:	a8 2f       	mov	r26, r24
 10e:	b0 e0       	ldi	r27, 0x00	; 0
 110:	fd 01       	movw	r30, r26
 112:	ee 0f       	add	r30, r30
 114:	ff 1f       	adc	r31, r31
 116:	ef 57       	subi	r30, 0x7F	; 127
 118:	fe 4f       	sbci	r31, 0xFE	; 254
 11a:	01 90       	ld	r0, Z+
 11c:	f0 81       	ld	r31, Z
 11e:	e0 2d       	mov	r30, r0
 120:	20 81       	ld	r18, Z
 122:	ab 56       	subi	r26, 0x6B	; 107
 124:	be 4f       	sbci	r27, 0xFE	; 254
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	0c 90       	ld	r0, X
 12c:	02 c0       	rjmp	.+4      	; 0x132 <makeRelayDrive+0x60>
 12e:	88 0f       	add	r24, r24
 130:	99 1f       	adc	r25, r25
 132:	0a 94       	dec	r0
 134:	e2 f7       	brpl	.-8      	; 0x12e <makeRelayDrive+0x5c>
 136:	80 95       	com	r24
 138:	82 23       	and	r24, r18
 13a:	80 83       	st	Z, r24
 13c:	08 95       	ret

0000013e <setval>:

/**********************************************************************************/

/*************************** RELAY DRIVE CALL ******************************************/
void setval(char* add)
{
 13e:	fc 01       	movw	r30, r24
	if( (*add=='#')&&(*(add+2)=='@'))
 140:	80 81       	ld	r24, Z
 142:	83 32       	cpi	r24, 0x23	; 35
 144:	39 f4       	brne	.+14     	; 0x154 <setval+0x16>
 146:	82 81       	ldd	r24, Z+2	; 0x02
 148:	80 34       	cpi	r24, 0x40	; 64
 14a:	21 f4       	brne	.+8      	; 0x154 <setval+0x16>
	{
		makeRelayDrive(*(add+3), *(add+1));
 14c:	83 81       	ldd	r24, Z+3	; 0x03
 14e:	61 81       	ldd	r22, Z+1	; 0x01
 150:	0e 94 69 00 	call	0xd2	; 0xd2 <makeRelayDrive>
 154:	08 95       	ret

00000156 <main>:
/***************************************************************************************/

/******************************* MAIN FUNCTIOn ****************************************/

int main(void) 
{    
 156:	4f 92       	push	r4
 158:	5f 92       	push	r5
 15a:	6f 92       	push	r6
 15c:	7f 92       	push	r7
 15e:	8f 92       	push	r8
 160:	9f 92       	push	r9
 162:	af 92       	push	r10
 164:	bf 92       	push	r11
 166:	df 92       	push	r13
 168:	ef 92       	push	r14
 16a:	ff 92       	push	r15
 16c:	0f 93       	push	r16
 16e:	1f 93       	push	r17
 170:	cf 93       	push	r28
 172:	df 93       	push	r29
	DDRD = 0b01011000; 				//Initialise pins as output and input for PORTD
 174:	88 e5       	ldi	r24, 0x58	; 88
 176:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0b00101001; 				//Initialise pins as output and input for PORTB
 178:	89 e2       	ldi	r24, 0x29	; 41
 17a:	84 b9       	out	0x04, r24	; 4
	DDRC = 0b00110101; 				//Initialise pins as output and input for PORTC
 17c:	85 e3       	ldi	r24, 0x35	; 53
 17e:	87 b9       	out	0x07, r24	; 7
	uart_init();					//UART Intialisation
 180:	0e 94 75 01 	call	0x2ea	; 0x2ea <uart_init>
    stdout = &uart_output;
 184:	8d e4       	ldi	r24, 0x4D	; 77
 186:	91 e0       	ldi	r25, 0x01	; 1
 188:	90 93 bb 01 	sts	0x01BB, r25
 18c:	80 93 ba 01 	sts	0x01BA, r24
    stdin  = &uart_input;
 190:	8b e5       	ldi	r24, 0x5B	; 91
 192:	91 e0       	ldi	r25, 0x01	; 1
 194:	90 93 b9 01 	sts	0x01B9, r25
 198:	80 93 b8 01 	sts	0x01B8, r24
   
    unsigned char input, c=0;   	// temperory variable for storing serial data
	unsigned char* word;			// pointer variable to store incoming serial command
	word = (char*)malloc(50*sizeof(char)); //allocating memory for pointer variable
 19c:	82 e3       	ldi	r24, 0x32	; 50
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	0e 94 9c 01 	call	0x338	; 0x338 <malloc>
 1a4:	8c 01       	movw	r16, r24
 1a6:	dd 24       	eor	r13, r13
		}

		
  		for(int pin=0;pin<NO_OF_RELAY;pin++)
		{
			printf("reading pin %c\n",pin);
 1a8:	e0 e0       	ldi	r30, 0x00	; 0
 1aa:	4e 2e       	mov	r4, r30
 1ac:	e1 e0       	ldi	r30, 0x01	; 1
 1ae:	5e 2e       	mov	r5, r30
      		}
  		}

		for(int pin=0;pin<NO_OF_RELAY;pin++)
		{
			printf("Checking status of pin %d\n",pin);
 1b0:	70 e1       	ldi	r23, 0x10	; 16
 1b2:	67 2e       	mov	r6, r23
 1b4:	71 e0       	ldi	r23, 0x01	; 1
 1b6:	77 2e       	mov	r7, r23
	     	if(deviceNewStatus[pin] != deviceOldStatus[pin])
			{
				printf("status changed of pin %d\n",pin); 
 1b8:	6b e2       	ldi	r22, 0x2B	; 43
 1ba:	86 2e       	mov	r8, r22
 1bc:	61 e0       	ldi	r22, 0x01	; 1
 1be:	96 2e       	mov	r9, r22
		        printf("#%d@%d$",deviceNewStatus[pin]?1:0,pin);
 1c0:	55 e4       	ldi	r21, 0x45	; 69
 1c2:	a5 2e       	mov	r10, r21
 1c4:	51 e0       	ldi	r21, 0x01	; 1
 1c6:	b5 2e       	mov	r11, r21
	word = (char*)malloc(50*sizeof(char)); //allocating memory for pointer variable
	unsigned int pinCounter[NO_OF_RELAY];	

    while(1) 
	{
    	input = getchar(); 		
 1c8:	80 91 b8 01 	lds	r24, 0x01B8
 1cc:	90 91 b9 01 	lds	r25, 0x01B9
 1d0:	0e 94 a1 02 	call	0x542	; 0x542 <fgetc>
		*word = input;
 1d4:	d8 01       	movw	r26, r16
 1d6:	8c 93       	st	X, r24
		if(*word=='$')				//Checking '$' in serial data 
 1d8:	84 32       	cpi	r24, 0x24	; 36
 1da:	39 f4       	brne	.+14     	; 0x1ea <main+0x94>
		{
			//printf("%c\n",*(word-4));
			setval(word-4);
 1dc:	04 50       	subi	r16, 0x04	; 4
 1de:	10 40       	sbci	r17, 0x00	; 0
 1e0:	c8 01       	movw	r24, r16
 1e2:	0e 94 9f 00 	call	0x13e	; 0x13e <setval>
			word = word-4;
			c=c-4;
 1e6:	bc ef       	ldi	r27, 0xFC	; 252
 1e8:	db 0e       	add	r13, r27
		}
		word++;
 1ea:	0f 5f       	subi	r16, 0xFF	; 255
 1ec:	1f 4f       	sbci	r17, 0xFF	; 255
		c++;
 1ee:	d3 94       	inc	r13
		if(c>49)
 1f0:	e1 e3       	ldi	r30, 0x31	; 49
 1f2:	ed 15       	cp	r30, r13
 1f4:	18 f4       	brcc	.+6      	; 0x1fc <main+0xa6>
		{
			word = word -50;
 1f6:	02 53       	subi	r16, 0x32	; 50
 1f8:	10 40       	sbci	r17, 0x00	; 0
 1fa:	dd 24       	eor	r13, r13
 1fc:	49 e6       	ldi	r20, 0x69	; 105
 1fe:	e4 2e       	mov	r14, r20
 200:	41 e0       	ldi	r20, 0x01	; 1
 202:	f4 2e       	mov	r15, r20
 204:	c0 e0       	ldi	r28, 0x00	; 0
 206:	d0 e0       	ldi	r29, 0x00	; 0
		}

		
  		for(int pin=0;pin<NO_OF_RELAY;pin++)
		{
			printf("reading pin %c\n",pin);
 208:	00 d0       	rcall	.+0      	; 0x20a <main+0xb4>
 20a:	00 d0       	rcall	.+0      	; 0x20c <main+0xb6>
 20c:	ad b7       	in	r26, 0x3d	; 61
 20e:	be b7       	in	r27, 0x3e	; 62
 210:	12 96       	adiw	r26, 0x02	; 2
 212:	5c 92       	st	X, r5
 214:	4e 92       	st	-X, r4
 216:	11 97       	sbiw	r26, 0x01	; 1
 218:	14 96       	adiw	r26, 0x04	; 4
 21a:	dc 93       	st	X, r29
 21c:	ce 93       	st	-X, r28
 21e:	13 97       	sbiw	r26, 0x03	; 3
 220:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <printf>
/********************************* READ PIN FUNCTION ************************************/

unsigned char readPin(unsigned char portPin)
{

	return (*inputPORT[portPin] & (1<<inputPin[portPin]))?1:0;
 224:	d7 01       	movw	r26, r14
 226:	ed 91       	ld	r30, X+
 228:	fd 91       	ld	r31, X+
 22a:	7d 01       	movw	r14, r26
 22c:	e0 81       	ld	r30, Z
			word = word -50;
			c=0;
		}

		
  		for(int pin=0;pin<NO_OF_RELAY;pin++)
 22e:	21 96       	adiw	r28, 0x01	; 1
 230:	0f 90       	pop	r0
 232:	0f 90       	pop	r0
 234:	0f 90       	pop	r0
 236:	0f 90       	pop	r0
 238:	c8 30       	cpi	r28, 0x08	; 8
 23a:	d1 05       	cpc	r29, r1
 23c:	29 f7       	brne	.-54     	; 0x208 <main+0xb2>
 23e:	c0 e0       	ldi	r28, 0x00	; 0
 240:	d0 e0       	ldi	r29, 0x00	; 0
      		}
  		}

		for(int pin=0;pin<NO_OF_RELAY;pin++)
		{
			printf("Checking status of pin %d\n",pin);
 242:	00 d0       	rcall	.+0      	; 0x244 <main+0xee>
 244:	00 d0       	rcall	.+0      	; 0x246 <main+0xf0>
 246:	ed b7       	in	r30, 0x3d	; 61
 248:	fe b7       	in	r31, 0x3e	; 62
 24a:	72 82       	std	Z+2, r7	; 0x02
 24c:	61 82       	std	Z+1, r6	; 0x01
 24e:	d4 83       	std	Z+4, r29	; 0x04
 250:	c3 83       	std	Z+3, r28	; 0x03
 252:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <printf>
	     	if(deviceNewStatus[pin] != deviceOldStatus[pin])
 256:	3c ea       	ldi	r19, 0xAC	; 172
 258:	e3 2e       	mov	r14, r19
 25a:	31 e0       	ldi	r19, 0x01	; 1
 25c:	f3 2e       	mov	r15, r19
 25e:	ec 0e       	add	r14, r28
 260:	fd 1e       	adc	r15, r29
 262:	d7 01       	movw	r26, r14
 264:	8c 91       	ld	r24, X
 266:	fe 01       	movw	r30, r28
 268:	ec 55       	subi	r30, 0x5C	; 92
 26a:	fe 4f       	sbci	r31, 0xFE	; 254
 26c:	90 81       	ld	r25, Z
 26e:	0f 90       	pop	r0
 270:	0f 90       	pop	r0
 272:	0f 90       	pop	r0
 274:	0f 90       	pop	r0
 276:	89 17       	cp	r24, r25
 278:	91 f1       	breq	.+100    	; 0x2de <main+0x188>
			{
				printf("status changed of pin %d\n",pin); 
 27a:	00 d0       	rcall	.+0      	; 0x27c <main+0x126>
 27c:	00 d0       	rcall	.+0      	; 0x27e <main+0x128>
 27e:	ed b7       	in	r30, 0x3d	; 61
 280:	fe b7       	in	r31, 0x3e	; 62
 282:	92 82       	std	Z+2, r9	; 0x02
 284:	81 82       	std	Z+1, r8	; 0x01
 286:	d4 83       	std	Z+4, r29	; 0x04
 288:	c3 83       	std	Z+3, r28	; 0x03
 28a:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <printf>
		        printf("#%d@%d$",deviceNewStatus[pin]?1:0,pin);
 28e:	d7 01       	movw	r26, r14
 290:	8c 91       	ld	r24, X
 292:	00 d0       	rcall	.+0      	; 0x294 <main+0x13e>
 294:	ed b7       	in	r30, 0x3d	; 61
 296:	fe b7       	in	r31, 0x3e	; 62
 298:	31 96       	adiw	r30, 0x01	; 1
 29a:	ad b7       	in	r26, 0x3d	; 61
 29c:	be b7       	in	r27, 0x3e	; 62
 29e:	12 96       	adiw	r26, 0x02	; 2
 2a0:	bc 92       	st	X, r11
 2a2:	ae 92       	st	-X, r10
 2a4:	11 97       	sbiw	r26, 0x01	; 1
 2a6:	20 e0       	ldi	r18, 0x00	; 0
 2a8:	30 e0       	ldi	r19, 0x00	; 0
 2aa:	88 23       	and	r24, r24
 2ac:	11 f0       	breq	.+4      	; 0x2b2 <main+0x15c>
 2ae:	21 e0       	ldi	r18, 0x01	; 1
 2b0:	30 e0       	ldi	r19, 0x00	; 0
 2b2:	33 83       	std	Z+3, r19	; 0x03
 2b4:	22 83       	std	Z+2, r18	; 0x02
 2b6:	d5 83       	std	Z+5, r29	; 0x05
 2b8:	c4 83       	std	Z+4, r28	; 0x04
 2ba:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <printf>
		        deviceOldStatus[pin] = deviceNewStatus[pin] ;
 2be:	fe 01       	movw	r30, r28
 2c0:	e4 55       	subi	r30, 0x54	; 84
 2c2:	fe 4f       	sbci	r31, 0xFE	; 254
 2c4:	80 81       	ld	r24, Z
 2c6:	fe 01       	movw	r30, r28
 2c8:	ec 55       	subi	r30, 0x5C	; 92
 2ca:	fe 4f       	sbci	r31, 0xFE	; 254
 2cc:	80 83       	st	Z, r24
 2ce:	ed b7       	in	r30, 0x3d	; 61
 2d0:	fe b7       	in	r31, 0x3e	; 62
 2d2:	36 96       	adiw	r30, 0x06	; 6
 2d4:	0f b6       	in	r0, 0x3f	; 63
 2d6:	f8 94       	cli
 2d8:	fe bf       	out	0x3e, r31	; 62
 2da:	0f be       	out	0x3f, r0	; 63
 2dc:	ed bf       	out	0x3d, r30	; 61
			{ 
          		pinCounter[pin] += 1 ;		//if yes increment respective pin counter 
      		}
  		}

		for(int pin=0;pin<NO_OF_RELAY;pin++)
 2de:	21 96       	adiw	r28, 0x01	; 1
 2e0:	c8 30       	cpi	r28, 0x08	; 8
 2e2:	d1 05       	cpc	r29, r1
 2e4:	09 f0       	breq	.+2      	; 0x2e8 <main+0x192>
 2e6:	ad cf       	rjmp	.-166    	; 0x242 <main+0xec>
 2e8:	6f cf       	rjmp	.-290    	; 0x1c8 <main+0x72>

000002ea <uart_init>:
#include <util/setbaud.h>

/* http://www.cs.mun.ca/~rod/Winter2007/4723/notes/serial/serial.html */

void uart_init(void) {
    UBRR0H = UBRRH_VALUE;
 2ea:	10 92 c5 00 	sts	0x00C5, r1
    UBRR0L = UBRRL_VALUE;
 2ee:	87 e6       	ldi	r24, 0x67	; 103
 2f0:	80 93 c4 00 	sts	0x00C4, r24
    
#if USE_2X
    UCSR0A |= _BV(U2X0);
#else
    UCSR0A &= ~(_BV(U2X0));
 2f4:	e0 ec       	ldi	r30, 0xC0	; 192
 2f6:	f0 e0       	ldi	r31, 0x00	; 0
 2f8:	80 81       	ld	r24, Z
 2fa:	8d 7f       	andi	r24, 0xFD	; 253
 2fc:	80 83       	st	Z, r24
#endif

    UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */ 
 2fe:	86 e0       	ldi	r24, 0x06	; 6
 300:	80 93 c2 00 	sts	0x00C2, r24
    UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */    
 304:	88 e1       	ldi	r24, 0x18	; 24
 306:	80 93 c1 00 	sts	0x00C1, r24
}
 30a:	08 95       	ret

0000030c <uart_putchar>:

void uart_putchar(char c, FILE *stream) {
 30c:	1f 93       	push	r17
 30e:	18 2f       	mov	r17, r24
    if (c == '\n') {
 310:	8a 30       	cpi	r24, 0x0A	; 10
 312:	19 f4       	brne	.+6      	; 0x31a <uart_putchar+0xe>
        uart_putchar('\r', stream);
 314:	8d e0       	ldi	r24, 0x0D	; 13
 316:	0e 94 86 01 	call	0x30c	; 0x30c <uart_putchar>
    }
    loop_until_bit_is_set(UCSR0A, UDRE0);
 31a:	80 91 c0 00 	lds	r24, 0x00C0
 31e:	85 ff       	sbrs	r24, 5
 320:	fc cf       	rjmp	.-8      	; 0x31a <uart_putchar+0xe>
    UDR0 = c;
 322:	10 93 c6 00 	sts	0x00C6, r17
}
 326:	1f 91       	pop	r17
 328:	08 95       	ret

0000032a <uart_getchar>:

char uart_getchar(FILE *stream) {
    loop_until_bit_is_set(UCSR0A, RXC0);
 32a:	80 91 c0 00 	lds	r24, 0x00C0
 32e:	87 ff       	sbrs	r24, 7
 330:	fc cf       	rjmp	.-8      	; 0x32a <uart_getchar>
    return UDR0;
 332:	80 91 c6 00 	lds	r24, 0x00C6
}
 336:	08 95       	ret

00000338 <malloc>:
 338:	cf 93       	push	r28
 33a:	df 93       	push	r29
 33c:	bc 01       	movw	r22, r24
 33e:	82 30       	cpi	r24, 0x02	; 2
 340:	91 05       	cpc	r25, r1
 342:	10 f4       	brcc	.+4      	; 0x348 <malloc+0x10>
 344:	62 e0       	ldi	r22, 0x02	; 2
 346:	70 e0       	ldi	r23, 0x00	; 0
 348:	a0 91 b6 01 	lds	r26, 0x01B6
 34c:	b0 91 b7 01 	lds	r27, 0x01B7
 350:	ed 01       	movw	r28, r26
 352:	e0 e0       	ldi	r30, 0x00	; 0
 354:	f0 e0       	ldi	r31, 0x00	; 0
 356:	40 e0       	ldi	r20, 0x00	; 0
 358:	50 e0       	ldi	r21, 0x00	; 0
 35a:	21 c0       	rjmp	.+66     	; 0x39e <malloc+0x66>
 35c:	88 81       	ld	r24, Y
 35e:	99 81       	ldd	r25, Y+1	; 0x01
 360:	86 17       	cp	r24, r22
 362:	97 07       	cpc	r25, r23
 364:	69 f4       	brne	.+26     	; 0x380 <malloc+0x48>
 366:	8a 81       	ldd	r24, Y+2	; 0x02
 368:	9b 81       	ldd	r25, Y+3	; 0x03
 36a:	30 97       	sbiw	r30, 0x00	; 0
 36c:	19 f0       	breq	.+6      	; 0x374 <malloc+0x3c>
 36e:	93 83       	std	Z+3, r25	; 0x03
 370:	82 83       	std	Z+2, r24	; 0x02
 372:	04 c0       	rjmp	.+8      	; 0x37c <malloc+0x44>
 374:	90 93 b7 01 	sts	0x01B7, r25
 378:	80 93 b6 01 	sts	0x01B6, r24
 37c:	fe 01       	movw	r30, r28
 37e:	34 c0       	rjmp	.+104    	; 0x3e8 <malloc+0xb0>
 380:	68 17       	cp	r22, r24
 382:	79 07       	cpc	r23, r25
 384:	38 f4       	brcc	.+14     	; 0x394 <malloc+0x5c>
 386:	41 15       	cp	r20, r1
 388:	51 05       	cpc	r21, r1
 38a:	19 f0       	breq	.+6      	; 0x392 <malloc+0x5a>
 38c:	84 17       	cp	r24, r20
 38e:	95 07       	cpc	r25, r21
 390:	08 f4       	brcc	.+2      	; 0x394 <malloc+0x5c>
 392:	ac 01       	movw	r20, r24
 394:	fe 01       	movw	r30, r28
 396:	8a 81       	ldd	r24, Y+2	; 0x02
 398:	9b 81       	ldd	r25, Y+3	; 0x03
 39a:	9c 01       	movw	r18, r24
 39c:	e9 01       	movw	r28, r18
 39e:	20 97       	sbiw	r28, 0x00	; 0
 3a0:	e9 f6       	brne	.-70     	; 0x35c <malloc+0x24>
 3a2:	41 15       	cp	r20, r1
 3a4:	51 05       	cpc	r21, r1
 3a6:	a9 f1       	breq	.+106    	; 0x412 <malloc+0xda>
 3a8:	ca 01       	movw	r24, r20
 3aa:	86 1b       	sub	r24, r22
 3ac:	97 0b       	sbc	r25, r23
 3ae:	04 97       	sbiw	r24, 0x04	; 4
 3b0:	08 f4       	brcc	.+2      	; 0x3b4 <malloc+0x7c>
 3b2:	ba 01       	movw	r22, r20
 3b4:	e0 e0       	ldi	r30, 0x00	; 0
 3b6:	f0 e0       	ldi	r31, 0x00	; 0
 3b8:	2a c0       	rjmp	.+84     	; 0x40e <malloc+0xd6>
 3ba:	8d 91       	ld	r24, X+
 3bc:	9c 91       	ld	r25, X
 3be:	11 97       	sbiw	r26, 0x01	; 1
 3c0:	84 17       	cp	r24, r20
 3c2:	95 07       	cpc	r25, r21
 3c4:	f9 f4       	brne	.+62     	; 0x404 <malloc+0xcc>
 3c6:	64 17       	cp	r22, r20
 3c8:	75 07       	cpc	r23, r21
 3ca:	81 f4       	brne	.+32     	; 0x3ec <malloc+0xb4>
 3cc:	12 96       	adiw	r26, 0x02	; 2
 3ce:	8d 91       	ld	r24, X+
 3d0:	9c 91       	ld	r25, X
 3d2:	13 97       	sbiw	r26, 0x03	; 3
 3d4:	30 97       	sbiw	r30, 0x00	; 0
 3d6:	19 f0       	breq	.+6      	; 0x3de <malloc+0xa6>
 3d8:	93 83       	std	Z+3, r25	; 0x03
 3da:	82 83       	std	Z+2, r24	; 0x02
 3dc:	04 c0       	rjmp	.+8      	; 0x3e6 <malloc+0xae>
 3de:	90 93 b7 01 	sts	0x01B7, r25
 3e2:	80 93 b6 01 	sts	0x01B6, r24
 3e6:	fd 01       	movw	r30, r26
 3e8:	32 96       	adiw	r30, 0x02	; 2
 3ea:	4f c0       	rjmp	.+158    	; 0x48a <malloc+0x152>
 3ec:	ca 01       	movw	r24, r20
 3ee:	86 1b       	sub	r24, r22
 3f0:	97 0b       	sbc	r25, r23
 3f2:	fd 01       	movw	r30, r26
 3f4:	e8 0f       	add	r30, r24
 3f6:	f9 1f       	adc	r31, r25
 3f8:	61 93       	st	Z+, r22
 3fa:	71 93       	st	Z+, r23
 3fc:	02 97       	sbiw	r24, 0x02	; 2
 3fe:	8d 93       	st	X+, r24
 400:	9c 93       	st	X, r25
 402:	43 c0       	rjmp	.+134    	; 0x48a <malloc+0x152>
 404:	fd 01       	movw	r30, r26
 406:	82 81       	ldd	r24, Z+2	; 0x02
 408:	93 81       	ldd	r25, Z+3	; 0x03
 40a:	9c 01       	movw	r18, r24
 40c:	d9 01       	movw	r26, r18
 40e:	10 97       	sbiw	r26, 0x00	; 0
 410:	a1 f6       	brne	.-88     	; 0x3ba <malloc+0x82>
 412:	80 91 b4 01 	lds	r24, 0x01B4
 416:	90 91 b5 01 	lds	r25, 0x01B5
 41a:	89 2b       	or	r24, r25
 41c:	41 f4       	brne	.+16     	; 0x42e <malloc+0xf6>
 41e:	80 91 9f 01 	lds	r24, 0x019F
 422:	90 91 a0 01 	lds	r25, 0x01A0
 426:	90 93 b5 01 	sts	0x01B5, r25
 42a:	80 93 b4 01 	sts	0x01B4, r24
 42e:	40 91 a1 01 	lds	r20, 0x01A1
 432:	50 91 a2 01 	lds	r21, 0x01A2
 436:	41 15       	cp	r20, r1
 438:	51 05       	cpc	r21, r1
 43a:	41 f4       	brne	.+16     	; 0x44c <malloc+0x114>
 43c:	4d b7       	in	r20, 0x3d	; 61
 43e:	5e b7       	in	r21, 0x3e	; 62
 440:	80 91 9d 01 	lds	r24, 0x019D
 444:	90 91 9e 01 	lds	r25, 0x019E
 448:	48 1b       	sub	r20, r24
 44a:	59 0b       	sbc	r21, r25
 44c:	20 91 b4 01 	lds	r18, 0x01B4
 450:	30 91 b5 01 	lds	r19, 0x01B5
 454:	24 17       	cp	r18, r20
 456:	35 07       	cpc	r19, r21
 458:	b0 f4       	brcc	.+44     	; 0x486 <malloc+0x14e>
 45a:	ca 01       	movw	r24, r20
 45c:	82 1b       	sub	r24, r18
 45e:	93 0b       	sbc	r25, r19
 460:	86 17       	cp	r24, r22
 462:	97 07       	cpc	r25, r23
 464:	80 f0       	brcs	.+32     	; 0x486 <malloc+0x14e>
 466:	ab 01       	movw	r20, r22
 468:	4e 5f       	subi	r20, 0xFE	; 254
 46a:	5f 4f       	sbci	r21, 0xFF	; 255
 46c:	84 17       	cp	r24, r20
 46e:	95 07       	cpc	r25, r21
 470:	50 f0       	brcs	.+20     	; 0x486 <malloc+0x14e>
 472:	42 0f       	add	r20, r18
 474:	53 1f       	adc	r21, r19
 476:	50 93 b5 01 	sts	0x01B5, r21
 47a:	40 93 b4 01 	sts	0x01B4, r20
 47e:	f9 01       	movw	r30, r18
 480:	61 93       	st	Z+, r22
 482:	71 93       	st	Z+, r23
 484:	02 c0       	rjmp	.+4      	; 0x48a <malloc+0x152>
 486:	e0 e0       	ldi	r30, 0x00	; 0
 488:	f0 e0       	ldi	r31, 0x00	; 0
 48a:	cf 01       	movw	r24, r30
 48c:	df 91       	pop	r29
 48e:	cf 91       	pop	r28
 490:	08 95       	ret

00000492 <free>:
 492:	cf 93       	push	r28
 494:	df 93       	push	r29
 496:	00 97       	sbiw	r24, 0x00	; 0
 498:	09 f4       	brne	.+2      	; 0x49c <free+0xa>
 49a:	50 c0       	rjmp	.+160    	; 0x53c <free+0xaa>
 49c:	ec 01       	movw	r28, r24
 49e:	22 97       	sbiw	r28, 0x02	; 2
 4a0:	1b 82       	std	Y+3, r1	; 0x03
 4a2:	1a 82       	std	Y+2, r1	; 0x02
 4a4:	a0 91 b6 01 	lds	r26, 0x01B6
 4a8:	b0 91 b7 01 	lds	r27, 0x01B7
 4ac:	10 97       	sbiw	r26, 0x00	; 0
 4ae:	09 f1       	breq	.+66     	; 0x4f2 <free+0x60>
 4b0:	40 e0       	ldi	r20, 0x00	; 0
 4b2:	50 e0       	ldi	r21, 0x00	; 0
 4b4:	ac 17       	cp	r26, r28
 4b6:	bd 07       	cpc	r27, r29
 4b8:	08 f1       	brcs	.+66     	; 0x4fc <free+0x6a>
 4ba:	bb 83       	std	Y+3, r27	; 0x03
 4bc:	aa 83       	std	Y+2, r26	; 0x02
 4be:	fe 01       	movw	r30, r28
 4c0:	21 91       	ld	r18, Z+
 4c2:	31 91       	ld	r19, Z+
 4c4:	e2 0f       	add	r30, r18
 4c6:	f3 1f       	adc	r31, r19
 4c8:	ae 17       	cp	r26, r30
 4ca:	bf 07       	cpc	r27, r31
 4cc:	79 f4       	brne	.+30     	; 0x4ec <free+0x5a>
 4ce:	8d 91       	ld	r24, X+
 4d0:	9c 91       	ld	r25, X
 4d2:	11 97       	sbiw	r26, 0x01	; 1
 4d4:	28 0f       	add	r18, r24
 4d6:	39 1f       	adc	r19, r25
 4d8:	2e 5f       	subi	r18, 0xFE	; 254
 4da:	3f 4f       	sbci	r19, 0xFF	; 255
 4dc:	39 83       	std	Y+1, r19	; 0x01
 4de:	28 83       	st	Y, r18
 4e0:	12 96       	adiw	r26, 0x02	; 2
 4e2:	8d 91       	ld	r24, X+
 4e4:	9c 91       	ld	r25, X
 4e6:	13 97       	sbiw	r26, 0x03	; 3
 4e8:	9b 83       	std	Y+3, r25	; 0x03
 4ea:	8a 83       	std	Y+2, r24	; 0x02
 4ec:	41 15       	cp	r20, r1
 4ee:	51 05       	cpc	r21, r1
 4f0:	71 f4       	brne	.+28     	; 0x50e <free+0x7c>
 4f2:	d0 93 b7 01 	sts	0x01B7, r29
 4f6:	c0 93 b6 01 	sts	0x01B6, r28
 4fa:	20 c0       	rjmp	.+64     	; 0x53c <free+0xaa>
 4fc:	12 96       	adiw	r26, 0x02	; 2
 4fe:	8d 91       	ld	r24, X+
 500:	9c 91       	ld	r25, X
 502:	13 97       	sbiw	r26, 0x03	; 3
 504:	ad 01       	movw	r20, r26
 506:	00 97       	sbiw	r24, 0x00	; 0
 508:	11 f0       	breq	.+4      	; 0x50e <free+0x7c>
 50a:	dc 01       	movw	r26, r24
 50c:	d3 cf       	rjmp	.-90     	; 0x4b4 <free+0x22>
 50e:	fa 01       	movw	r30, r20
 510:	d3 83       	std	Z+3, r29	; 0x03
 512:	c2 83       	std	Z+2, r28	; 0x02
 514:	21 91       	ld	r18, Z+
 516:	31 91       	ld	r19, Z+
 518:	e2 0f       	add	r30, r18
 51a:	f3 1f       	adc	r31, r19
 51c:	ce 17       	cp	r28, r30
 51e:	df 07       	cpc	r29, r31
 520:	69 f4       	brne	.+26     	; 0x53c <free+0xaa>
 522:	88 81       	ld	r24, Y
 524:	99 81       	ldd	r25, Y+1	; 0x01
 526:	28 0f       	add	r18, r24
 528:	39 1f       	adc	r19, r25
 52a:	2e 5f       	subi	r18, 0xFE	; 254
 52c:	3f 4f       	sbci	r19, 0xFF	; 255
 52e:	fa 01       	movw	r30, r20
 530:	31 83       	std	Z+1, r19	; 0x01
 532:	20 83       	st	Z, r18
 534:	8a 81       	ldd	r24, Y+2	; 0x02
 536:	9b 81       	ldd	r25, Y+3	; 0x03
 538:	93 83       	std	Z+3, r25	; 0x03
 53a:	82 83       	std	Z+2, r24	; 0x02
 53c:	df 91       	pop	r29
 53e:	cf 91       	pop	r28
 540:	08 95       	ret

00000542 <fgetc>:
 542:	cf 93       	push	r28
 544:	df 93       	push	r29
 546:	ec 01       	movw	r28, r24
 548:	4b 81       	ldd	r20, Y+3	; 0x03
 54a:	40 ff       	sbrs	r20, 0
 54c:	1a c0       	rjmp	.+52     	; 0x582 <fgetc+0x40>
 54e:	46 ff       	sbrs	r20, 6
 550:	0a c0       	rjmp	.+20     	; 0x566 <fgetc+0x24>
 552:	4f 7b       	andi	r20, 0xBF	; 191
 554:	4b 83       	std	Y+3, r20	; 0x03
 556:	8e 81       	ldd	r24, Y+6	; 0x06
 558:	9f 81       	ldd	r25, Y+7	; 0x07
 55a:	01 96       	adiw	r24, 0x01	; 1
 55c:	9f 83       	std	Y+7, r25	; 0x07
 55e:	8e 83       	std	Y+6, r24	; 0x06
 560:	8a 81       	ldd	r24, Y+2	; 0x02
 562:	28 2f       	mov	r18, r24
 564:	2b c0       	rjmp	.+86     	; 0x5bc <fgetc+0x7a>
 566:	42 ff       	sbrs	r20, 2
 568:	13 c0       	rjmp	.+38     	; 0x590 <fgetc+0x4e>
 56a:	e8 81       	ld	r30, Y
 56c:	f9 81       	ldd	r31, Y+1	; 0x01
 56e:	80 81       	ld	r24, Z
 570:	28 2f       	mov	r18, r24
 572:	33 27       	eor	r19, r19
 574:	27 fd       	sbrc	r18, 7
 576:	30 95       	com	r19
 578:	21 15       	cp	r18, r1
 57a:	31 05       	cpc	r19, r1
 57c:	29 f4       	brne	.+10     	; 0x588 <fgetc+0x46>
 57e:	40 62       	ori	r20, 0x20	; 32
 580:	4b 83       	std	Y+3, r20	; 0x03
 582:	2f ef       	ldi	r18, 0xFF	; 255
 584:	3f ef       	ldi	r19, 0xFF	; 255
 586:	1b c0       	rjmp	.+54     	; 0x5be <fgetc+0x7c>
 588:	31 96       	adiw	r30, 0x01	; 1
 58a:	f9 83       	std	Y+1, r31	; 0x01
 58c:	e8 83       	st	Y, r30
 58e:	11 c0       	rjmp	.+34     	; 0x5b2 <fgetc+0x70>
 590:	ea 85       	ldd	r30, Y+10	; 0x0a
 592:	fb 85       	ldd	r31, Y+11	; 0x0b
 594:	ce 01       	movw	r24, r28
 596:	09 95       	icall
 598:	9c 01       	movw	r18, r24
 59a:	97 ff       	sbrs	r25, 7
 59c:	0a c0       	rjmp	.+20     	; 0x5b2 <fgetc+0x70>
 59e:	9b 81       	ldd	r25, Y+3	; 0x03
 5a0:	2f 5f       	subi	r18, 0xFF	; 255
 5a2:	3f 4f       	sbci	r19, 0xFF	; 255
 5a4:	11 f0       	breq	.+4      	; 0x5aa <fgetc+0x68>
 5a6:	80 e2       	ldi	r24, 0x20	; 32
 5a8:	01 c0       	rjmp	.+2      	; 0x5ac <fgetc+0x6a>
 5aa:	80 e1       	ldi	r24, 0x10	; 16
 5ac:	89 2b       	or	r24, r25
 5ae:	8b 83       	std	Y+3, r24	; 0x03
 5b0:	e8 cf       	rjmp	.-48     	; 0x582 <fgetc+0x40>
 5b2:	8e 81       	ldd	r24, Y+6	; 0x06
 5b4:	9f 81       	ldd	r25, Y+7	; 0x07
 5b6:	01 96       	adiw	r24, 0x01	; 1
 5b8:	9f 83       	std	Y+7, r25	; 0x07
 5ba:	8e 83       	std	Y+6, r24	; 0x06
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	c9 01       	movw	r24, r18
 5c0:	df 91       	pop	r29
 5c2:	cf 91       	pop	r28
 5c4:	08 95       	ret

000005c6 <printf>:
 5c6:	a0 e0       	ldi	r26, 0x00	; 0
 5c8:	b0 e0       	ldi	r27, 0x00	; 0
 5ca:	e9 ee       	ldi	r30, 0xE9	; 233
 5cc:	f2 e0       	ldi	r31, 0x02	; 2
 5ce:	0c 94 85 05 	jmp	0xb0a	; 0xb0a <__prologue_saves__+0x20>
 5d2:	fe 01       	movw	r30, r28
 5d4:	35 96       	adiw	r30, 0x05	; 5
 5d6:	61 91       	ld	r22, Z+
 5d8:	71 91       	ld	r23, Z+
 5da:	80 91 ba 01 	lds	r24, 0x01BA
 5de:	90 91 bb 01 	lds	r25, 0x01BB
 5e2:	af 01       	movw	r20, r30
 5e4:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <vfprintf>
 5e8:	20 96       	adiw	r28, 0x00	; 0
 5ea:	e2 e0       	ldi	r30, 0x02	; 2
 5ec:	0c 94 a1 05 	jmp	0xb42	; 0xb42 <__epilogue_restores__+0x20>

000005f0 <vfprintf>:
 5f0:	ab e0       	ldi	r26, 0x0B	; 11
 5f2:	b0 e0       	ldi	r27, 0x00	; 0
 5f4:	ee ef       	ldi	r30, 0xFE	; 254
 5f6:	f2 e0       	ldi	r31, 0x02	; 2
 5f8:	0c 94 75 05 	jmp	0xaea	; 0xaea <__prologue_saves__>
 5fc:	3c 01       	movw	r6, r24
 5fe:	2b 01       	movw	r4, r22
 600:	5a 01       	movw	r10, r20
 602:	fc 01       	movw	r30, r24
 604:	17 82       	std	Z+7, r1	; 0x07
 606:	16 82       	std	Z+6, r1	; 0x06
 608:	83 81       	ldd	r24, Z+3	; 0x03
 60a:	81 fd       	sbrc	r24, 1
 60c:	03 c0       	rjmp	.+6      	; 0x614 <vfprintf+0x24>
 60e:	6f ef       	ldi	r22, 0xFF	; 255
 610:	7f ef       	ldi	r23, 0xFF	; 255
 612:	c6 c1       	rjmp	.+908    	; 0x9a0 <__stack+0xa1>
 614:	9a e0       	ldi	r25, 0x0A	; 10
 616:	89 2e       	mov	r8, r25
 618:	1e 01       	movw	r2, r28
 61a:	08 94       	sec
 61c:	21 1c       	adc	r2, r1
 61e:	31 1c       	adc	r3, r1
 620:	f3 01       	movw	r30, r6
 622:	23 81       	ldd	r18, Z+3	; 0x03
 624:	f2 01       	movw	r30, r4
 626:	23 fd       	sbrc	r18, 3
 628:	85 91       	lpm	r24, Z+
 62a:	23 ff       	sbrs	r18, 3
 62c:	81 91       	ld	r24, Z+
 62e:	2f 01       	movw	r4, r30
 630:	88 23       	and	r24, r24
 632:	09 f4       	brne	.+2      	; 0x636 <vfprintf+0x46>
 634:	b2 c1       	rjmp	.+868    	; 0x99a <__stack+0x9b>
 636:	85 32       	cpi	r24, 0x25	; 37
 638:	39 f4       	brne	.+14     	; 0x648 <vfprintf+0x58>
 63a:	23 fd       	sbrc	r18, 3
 63c:	85 91       	lpm	r24, Z+
 63e:	23 ff       	sbrs	r18, 3
 640:	81 91       	ld	r24, Z+
 642:	2f 01       	movw	r4, r30
 644:	85 32       	cpi	r24, 0x25	; 37
 646:	29 f4       	brne	.+10     	; 0x652 <vfprintf+0x62>
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	b3 01       	movw	r22, r6
 64c:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <fputc>
 650:	e7 cf       	rjmp	.-50     	; 0x620 <vfprintf+0x30>
 652:	98 2f       	mov	r25, r24
 654:	ff 24       	eor	r15, r15
 656:	ee 24       	eor	r14, r14
 658:	99 24       	eor	r9, r9
 65a:	ff e1       	ldi	r31, 0x1F	; 31
 65c:	ff 15       	cp	r31, r15
 65e:	d0 f0       	brcs	.+52     	; 0x694 <vfprintf+0xa4>
 660:	9b 32       	cpi	r25, 0x2B	; 43
 662:	69 f0       	breq	.+26     	; 0x67e <vfprintf+0x8e>
 664:	9c 32       	cpi	r25, 0x2C	; 44
 666:	28 f4       	brcc	.+10     	; 0x672 <vfprintf+0x82>
 668:	90 32       	cpi	r25, 0x20	; 32
 66a:	59 f0       	breq	.+22     	; 0x682 <vfprintf+0x92>
 66c:	93 32       	cpi	r25, 0x23	; 35
 66e:	91 f4       	brne	.+36     	; 0x694 <vfprintf+0xa4>
 670:	0e c0       	rjmp	.+28     	; 0x68e <vfprintf+0x9e>
 672:	9d 32       	cpi	r25, 0x2D	; 45
 674:	49 f0       	breq	.+18     	; 0x688 <vfprintf+0x98>
 676:	90 33       	cpi	r25, 0x30	; 48
 678:	69 f4       	brne	.+26     	; 0x694 <vfprintf+0xa4>
 67a:	41 e0       	ldi	r20, 0x01	; 1
 67c:	24 c0       	rjmp	.+72     	; 0x6c6 <vfprintf+0xd6>
 67e:	52 e0       	ldi	r21, 0x02	; 2
 680:	f5 2a       	or	r15, r21
 682:	84 e0       	ldi	r24, 0x04	; 4
 684:	f8 2a       	or	r15, r24
 686:	28 c0       	rjmp	.+80     	; 0x6d8 <vfprintf+0xe8>
 688:	98 e0       	ldi	r25, 0x08	; 8
 68a:	f9 2a       	or	r15, r25
 68c:	25 c0       	rjmp	.+74     	; 0x6d8 <vfprintf+0xe8>
 68e:	e0 e1       	ldi	r30, 0x10	; 16
 690:	fe 2a       	or	r15, r30
 692:	22 c0       	rjmp	.+68     	; 0x6d8 <vfprintf+0xe8>
 694:	f7 fc       	sbrc	r15, 7
 696:	29 c0       	rjmp	.+82     	; 0x6ea <vfprintf+0xfa>
 698:	89 2f       	mov	r24, r25
 69a:	80 53       	subi	r24, 0x30	; 48
 69c:	8a 30       	cpi	r24, 0x0A	; 10
 69e:	70 f4       	brcc	.+28     	; 0x6bc <vfprintf+0xcc>
 6a0:	f6 fe       	sbrs	r15, 6
 6a2:	05 c0       	rjmp	.+10     	; 0x6ae <vfprintf+0xbe>
 6a4:	98 9c       	mul	r9, r8
 6a6:	90 2c       	mov	r9, r0
 6a8:	11 24       	eor	r1, r1
 6aa:	98 0e       	add	r9, r24
 6ac:	15 c0       	rjmp	.+42     	; 0x6d8 <vfprintf+0xe8>
 6ae:	e8 9c       	mul	r14, r8
 6b0:	e0 2c       	mov	r14, r0
 6b2:	11 24       	eor	r1, r1
 6b4:	e8 0e       	add	r14, r24
 6b6:	f0 e2       	ldi	r31, 0x20	; 32
 6b8:	ff 2a       	or	r15, r31
 6ba:	0e c0       	rjmp	.+28     	; 0x6d8 <vfprintf+0xe8>
 6bc:	9e 32       	cpi	r25, 0x2E	; 46
 6be:	29 f4       	brne	.+10     	; 0x6ca <vfprintf+0xda>
 6c0:	f6 fc       	sbrc	r15, 6
 6c2:	6b c1       	rjmp	.+726    	; 0x99a <__stack+0x9b>
 6c4:	40 e4       	ldi	r20, 0x40	; 64
 6c6:	f4 2a       	or	r15, r20
 6c8:	07 c0       	rjmp	.+14     	; 0x6d8 <vfprintf+0xe8>
 6ca:	9c 36       	cpi	r25, 0x6C	; 108
 6cc:	19 f4       	brne	.+6      	; 0x6d4 <vfprintf+0xe4>
 6ce:	50 e8       	ldi	r21, 0x80	; 128
 6d0:	f5 2a       	or	r15, r21
 6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <vfprintf+0xe8>
 6d4:	98 36       	cpi	r25, 0x68	; 104
 6d6:	49 f4       	brne	.+18     	; 0x6ea <vfprintf+0xfa>
 6d8:	f2 01       	movw	r30, r4
 6da:	23 fd       	sbrc	r18, 3
 6dc:	95 91       	lpm	r25, Z+
 6de:	23 ff       	sbrs	r18, 3
 6e0:	91 91       	ld	r25, Z+
 6e2:	2f 01       	movw	r4, r30
 6e4:	99 23       	and	r25, r25
 6e6:	09 f0       	breq	.+2      	; 0x6ea <vfprintf+0xfa>
 6e8:	b8 cf       	rjmp	.-144    	; 0x65a <vfprintf+0x6a>
 6ea:	89 2f       	mov	r24, r25
 6ec:	85 54       	subi	r24, 0x45	; 69
 6ee:	83 30       	cpi	r24, 0x03	; 3
 6f0:	18 f0       	brcs	.+6      	; 0x6f8 <vfprintf+0x108>
 6f2:	80 52       	subi	r24, 0x20	; 32
 6f4:	83 30       	cpi	r24, 0x03	; 3
 6f6:	38 f4       	brcc	.+14     	; 0x706 <vfprintf+0x116>
 6f8:	44 e0       	ldi	r20, 0x04	; 4
 6fa:	50 e0       	ldi	r21, 0x00	; 0
 6fc:	a4 0e       	add	r10, r20
 6fe:	b5 1e       	adc	r11, r21
 700:	5f e3       	ldi	r21, 0x3F	; 63
 702:	59 83       	std	Y+1, r21	; 0x01
 704:	0f c0       	rjmp	.+30     	; 0x724 <vfprintf+0x134>
 706:	93 36       	cpi	r25, 0x63	; 99
 708:	31 f0       	breq	.+12     	; 0x716 <vfprintf+0x126>
 70a:	93 37       	cpi	r25, 0x73	; 115
 70c:	79 f0       	breq	.+30     	; 0x72c <vfprintf+0x13c>
 70e:	93 35       	cpi	r25, 0x53	; 83
 710:	09 f0       	breq	.+2      	; 0x714 <vfprintf+0x124>
 712:	56 c0       	rjmp	.+172    	; 0x7c0 <vfprintf+0x1d0>
 714:	20 c0       	rjmp	.+64     	; 0x756 <vfprintf+0x166>
 716:	f5 01       	movw	r30, r10
 718:	80 81       	ld	r24, Z
 71a:	89 83       	std	Y+1, r24	; 0x01
 71c:	42 e0       	ldi	r20, 0x02	; 2
 71e:	50 e0       	ldi	r21, 0x00	; 0
 720:	a4 0e       	add	r10, r20
 722:	b5 1e       	adc	r11, r21
 724:	61 01       	movw	r12, r2
 726:	01 e0       	ldi	r16, 0x01	; 1
 728:	10 e0       	ldi	r17, 0x00	; 0
 72a:	12 c0       	rjmp	.+36     	; 0x750 <vfprintf+0x160>
 72c:	f5 01       	movw	r30, r10
 72e:	c0 80       	ld	r12, Z
 730:	d1 80       	ldd	r13, Z+1	; 0x01
 732:	f6 fc       	sbrc	r15, 6
 734:	03 c0       	rjmp	.+6      	; 0x73c <vfprintf+0x14c>
 736:	6f ef       	ldi	r22, 0xFF	; 255
 738:	7f ef       	ldi	r23, 0xFF	; 255
 73a:	02 c0       	rjmp	.+4      	; 0x740 <vfprintf+0x150>
 73c:	69 2d       	mov	r22, r9
 73e:	70 e0       	ldi	r23, 0x00	; 0
 740:	42 e0       	ldi	r20, 0x02	; 2
 742:	50 e0       	ldi	r21, 0x00	; 0
 744:	a4 0e       	add	r10, r20
 746:	b5 1e       	adc	r11, r21
 748:	c6 01       	movw	r24, r12
 74a:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <strnlen>
 74e:	8c 01       	movw	r16, r24
 750:	5f e7       	ldi	r21, 0x7F	; 127
 752:	f5 22       	and	r15, r21
 754:	14 c0       	rjmp	.+40     	; 0x77e <vfprintf+0x18e>
 756:	f5 01       	movw	r30, r10
 758:	c0 80       	ld	r12, Z
 75a:	d1 80       	ldd	r13, Z+1	; 0x01
 75c:	f6 fc       	sbrc	r15, 6
 75e:	03 c0       	rjmp	.+6      	; 0x766 <vfprintf+0x176>
 760:	6f ef       	ldi	r22, 0xFF	; 255
 762:	7f ef       	ldi	r23, 0xFF	; 255
 764:	02 c0       	rjmp	.+4      	; 0x76a <vfprintf+0x17a>
 766:	69 2d       	mov	r22, r9
 768:	70 e0       	ldi	r23, 0x00	; 0
 76a:	42 e0       	ldi	r20, 0x02	; 2
 76c:	50 e0       	ldi	r21, 0x00	; 0
 76e:	a4 0e       	add	r10, r20
 770:	b5 1e       	adc	r11, r21
 772:	c6 01       	movw	r24, r12
 774:	0e 94 d5 04 	call	0x9aa	; 0x9aa <strnlen_P>
 778:	8c 01       	movw	r16, r24
 77a:	50 e8       	ldi	r21, 0x80	; 128
 77c:	f5 2a       	or	r15, r21
 77e:	f3 fe       	sbrs	r15, 3
 780:	07 c0       	rjmp	.+14     	; 0x790 <vfprintf+0x1a0>
 782:	1a c0       	rjmp	.+52     	; 0x7b8 <vfprintf+0x1c8>
 784:	80 e2       	ldi	r24, 0x20	; 32
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	b3 01       	movw	r22, r6
 78a:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <fputc>
 78e:	ea 94       	dec	r14
 790:	8e 2d       	mov	r24, r14
 792:	90 e0       	ldi	r25, 0x00	; 0
 794:	08 17       	cp	r16, r24
 796:	19 07       	cpc	r17, r25
 798:	a8 f3       	brcs	.-22     	; 0x784 <vfprintf+0x194>
 79a:	0e c0       	rjmp	.+28     	; 0x7b8 <vfprintf+0x1c8>
 79c:	f6 01       	movw	r30, r12
 79e:	f7 fc       	sbrc	r15, 7
 7a0:	85 91       	lpm	r24, Z+
 7a2:	f7 fe       	sbrs	r15, 7
 7a4:	81 91       	ld	r24, Z+
 7a6:	6f 01       	movw	r12, r30
 7a8:	90 e0       	ldi	r25, 0x00	; 0
 7aa:	b3 01       	movw	r22, r6
 7ac:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <fputc>
 7b0:	e1 10       	cpse	r14, r1
 7b2:	ea 94       	dec	r14
 7b4:	01 50       	subi	r16, 0x01	; 1
 7b6:	10 40       	sbci	r17, 0x00	; 0
 7b8:	01 15       	cp	r16, r1
 7ba:	11 05       	cpc	r17, r1
 7bc:	79 f7       	brne	.-34     	; 0x79c <vfprintf+0x1ac>
 7be:	ea c0       	rjmp	.+468    	; 0x994 <__stack+0x95>
 7c0:	94 36       	cpi	r25, 0x64	; 100
 7c2:	11 f0       	breq	.+4      	; 0x7c8 <vfprintf+0x1d8>
 7c4:	99 36       	cpi	r25, 0x69	; 105
 7c6:	69 f5       	brne	.+90     	; 0x822 <vfprintf+0x232>
 7c8:	f7 fe       	sbrs	r15, 7
 7ca:	08 c0       	rjmp	.+16     	; 0x7dc <vfprintf+0x1ec>
 7cc:	f5 01       	movw	r30, r10
 7ce:	20 81       	ld	r18, Z
 7d0:	31 81       	ldd	r19, Z+1	; 0x01
 7d2:	42 81       	ldd	r20, Z+2	; 0x02
 7d4:	53 81       	ldd	r21, Z+3	; 0x03
 7d6:	84 e0       	ldi	r24, 0x04	; 4
 7d8:	90 e0       	ldi	r25, 0x00	; 0
 7da:	0a c0       	rjmp	.+20     	; 0x7f0 <vfprintf+0x200>
 7dc:	f5 01       	movw	r30, r10
 7de:	80 81       	ld	r24, Z
 7e0:	91 81       	ldd	r25, Z+1	; 0x01
 7e2:	9c 01       	movw	r18, r24
 7e4:	44 27       	eor	r20, r20
 7e6:	37 fd       	sbrc	r19, 7
 7e8:	40 95       	com	r20
 7ea:	54 2f       	mov	r21, r20
 7ec:	82 e0       	ldi	r24, 0x02	; 2
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	a8 0e       	add	r10, r24
 7f2:	b9 1e       	adc	r11, r25
 7f4:	9f e6       	ldi	r25, 0x6F	; 111
 7f6:	f9 22       	and	r15, r25
 7f8:	57 ff       	sbrs	r21, 7
 7fa:	09 c0       	rjmp	.+18     	; 0x80e <vfprintf+0x21e>
 7fc:	50 95       	com	r21
 7fe:	40 95       	com	r20
 800:	30 95       	com	r19
 802:	21 95       	neg	r18
 804:	3f 4f       	sbci	r19, 0xFF	; 255
 806:	4f 4f       	sbci	r20, 0xFF	; 255
 808:	5f 4f       	sbci	r21, 0xFF	; 255
 80a:	e0 e8       	ldi	r30, 0x80	; 128
 80c:	fe 2a       	or	r15, r30
 80e:	ca 01       	movw	r24, r20
 810:	b9 01       	movw	r22, r18
 812:	a1 01       	movw	r20, r2
 814:	2a e0       	ldi	r18, 0x0A	; 10
 816:	30 e0       	ldi	r19, 0x00	; 0
 818:	0e 94 17 05 	call	0xa2e	; 0xa2e <__ultoa_invert>
 81c:	d8 2e       	mov	r13, r24
 81e:	d2 18       	sub	r13, r2
 820:	40 c0       	rjmp	.+128    	; 0x8a2 <vfprintf+0x2b2>
 822:	95 37       	cpi	r25, 0x75	; 117
 824:	29 f4       	brne	.+10     	; 0x830 <vfprintf+0x240>
 826:	1f 2d       	mov	r17, r15
 828:	1f 7e       	andi	r17, 0xEF	; 239
 82a:	2a e0       	ldi	r18, 0x0A	; 10
 82c:	30 e0       	ldi	r19, 0x00	; 0
 82e:	1d c0       	rjmp	.+58     	; 0x86a <vfprintf+0x27a>
 830:	1f 2d       	mov	r17, r15
 832:	19 7f       	andi	r17, 0xF9	; 249
 834:	9f 36       	cpi	r25, 0x6F	; 111
 836:	61 f0       	breq	.+24     	; 0x850 <vfprintf+0x260>
 838:	90 37       	cpi	r25, 0x70	; 112
 83a:	20 f4       	brcc	.+8      	; 0x844 <vfprintf+0x254>
 83c:	98 35       	cpi	r25, 0x58	; 88
 83e:	09 f0       	breq	.+2      	; 0x842 <vfprintf+0x252>
 840:	ac c0       	rjmp	.+344    	; 0x99a <__stack+0x9b>
 842:	0f c0       	rjmp	.+30     	; 0x862 <vfprintf+0x272>
 844:	90 37       	cpi	r25, 0x70	; 112
 846:	39 f0       	breq	.+14     	; 0x856 <vfprintf+0x266>
 848:	98 37       	cpi	r25, 0x78	; 120
 84a:	09 f0       	breq	.+2      	; 0x84e <vfprintf+0x25e>
 84c:	a6 c0       	rjmp	.+332    	; 0x99a <__stack+0x9b>
 84e:	04 c0       	rjmp	.+8      	; 0x858 <vfprintf+0x268>
 850:	28 e0       	ldi	r18, 0x08	; 8
 852:	30 e0       	ldi	r19, 0x00	; 0
 854:	0a c0       	rjmp	.+20     	; 0x86a <vfprintf+0x27a>
 856:	10 61       	ori	r17, 0x10	; 16
 858:	14 fd       	sbrc	r17, 4
 85a:	14 60       	ori	r17, 0x04	; 4
 85c:	20 e1       	ldi	r18, 0x10	; 16
 85e:	30 e0       	ldi	r19, 0x00	; 0
 860:	04 c0       	rjmp	.+8      	; 0x86a <vfprintf+0x27a>
 862:	14 fd       	sbrc	r17, 4
 864:	16 60       	ori	r17, 0x06	; 6
 866:	20 e1       	ldi	r18, 0x10	; 16
 868:	32 e0       	ldi	r19, 0x02	; 2
 86a:	17 ff       	sbrs	r17, 7
 86c:	08 c0       	rjmp	.+16     	; 0x87e <vfprintf+0x28e>
 86e:	f5 01       	movw	r30, r10
 870:	60 81       	ld	r22, Z
 872:	71 81       	ldd	r23, Z+1	; 0x01
 874:	82 81       	ldd	r24, Z+2	; 0x02
 876:	93 81       	ldd	r25, Z+3	; 0x03
 878:	44 e0       	ldi	r20, 0x04	; 4
 87a:	50 e0       	ldi	r21, 0x00	; 0
 87c:	08 c0       	rjmp	.+16     	; 0x88e <vfprintf+0x29e>
 87e:	f5 01       	movw	r30, r10
 880:	80 81       	ld	r24, Z
 882:	91 81       	ldd	r25, Z+1	; 0x01
 884:	bc 01       	movw	r22, r24
 886:	80 e0       	ldi	r24, 0x00	; 0
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	42 e0       	ldi	r20, 0x02	; 2
 88c:	50 e0       	ldi	r21, 0x00	; 0
 88e:	a4 0e       	add	r10, r20
 890:	b5 1e       	adc	r11, r21
 892:	a1 01       	movw	r20, r2
 894:	0e 94 17 05 	call	0xa2e	; 0xa2e <__ultoa_invert>
 898:	d8 2e       	mov	r13, r24
 89a:	d2 18       	sub	r13, r2
 89c:	8f e7       	ldi	r24, 0x7F	; 127
 89e:	f8 2e       	mov	r15, r24
 8a0:	f1 22       	and	r15, r17
 8a2:	f6 fe       	sbrs	r15, 6
 8a4:	0b c0       	rjmp	.+22     	; 0x8bc <vfprintf+0x2cc>
 8a6:	5e ef       	ldi	r21, 0xFE	; 254
 8a8:	f5 22       	and	r15, r21
 8aa:	d9 14       	cp	r13, r9
 8ac:	38 f4       	brcc	.+14     	; 0x8bc <vfprintf+0x2cc>
 8ae:	f4 fe       	sbrs	r15, 4
 8b0:	07 c0       	rjmp	.+14     	; 0x8c0 <vfprintf+0x2d0>
 8b2:	f2 fc       	sbrc	r15, 2
 8b4:	05 c0       	rjmp	.+10     	; 0x8c0 <vfprintf+0x2d0>
 8b6:	8f ee       	ldi	r24, 0xEF	; 239
 8b8:	f8 22       	and	r15, r24
 8ba:	02 c0       	rjmp	.+4      	; 0x8c0 <vfprintf+0x2d0>
 8bc:	1d 2d       	mov	r17, r13
 8be:	01 c0       	rjmp	.+2      	; 0x8c2 <vfprintf+0x2d2>
 8c0:	19 2d       	mov	r17, r9
 8c2:	f4 fe       	sbrs	r15, 4
 8c4:	0d c0       	rjmp	.+26     	; 0x8e0 <vfprintf+0x2f0>
 8c6:	fe 01       	movw	r30, r28
 8c8:	ed 0d       	add	r30, r13
 8ca:	f1 1d       	adc	r31, r1
 8cc:	80 81       	ld	r24, Z
 8ce:	80 33       	cpi	r24, 0x30	; 48
 8d0:	19 f4       	brne	.+6      	; 0x8d8 <vfprintf+0x2e8>
 8d2:	99 ee       	ldi	r25, 0xE9	; 233
 8d4:	f9 22       	and	r15, r25
 8d6:	08 c0       	rjmp	.+16     	; 0x8e8 <vfprintf+0x2f8>
 8d8:	1f 5f       	subi	r17, 0xFF	; 255
 8da:	f2 fe       	sbrs	r15, 2
 8dc:	05 c0       	rjmp	.+10     	; 0x8e8 <vfprintf+0x2f8>
 8de:	03 c0       	rjmp	.+6      	; 0x8e6 <vfprintf+0x2f6>
 8e0:	8f 2d       	mov	r24, r15
 8e2:	86 78       	andi	r24, 0x86	; 134
 8e4:	09 f0       	breq	.+2      	; 0x8e8 <vfprintf+0x2f8>
 8e6:	1f 5f       	subi	r17, 0xFF	; 255
 8e8:	0f 2d       	mov	r16, r15
 8ea:	f3 fc       	sbrc	r15, 3
 8ec:	14 c0       	rjmp	.+40     	; 0x916 <__stack+0x17>
 8ee:	f0 fe       	sbrs	r15, 0
 8f0:	0f c0       	rjmp	.+30     	; 0x910 <__stack+0x11>
 8f2:	1e 15       	cp	r17, r14
 8f4:	10 f0       	brcs	.+4      	; 0x8fa <vfprintf+0x30a>
 8f6:	9d 2c       	mov	r9, r13
 8f8:	0b c0       	rjmp	.+22     	; 0x910 <__stack+0x11>
 8fa:	9d 2c       	mov	r9, r13
 8fc:	9e 0c       	add	r9, r14
 8fe:	91 1a       	sub	r9, r17
 900:	1e 2d       	mov	r17, r14
 902:	06 c0       	rjmp	.+12     	; 0x910 <__stack+0x11>
 904:	80 e2       	ldi	r24, 0x20	; 32
 906:	90 e0       	ldi	r25, 0x00	; 0
 908:	b3 01       	movw	r22, r6
 90a:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <fputc>
 90e:	1f 5f       	subi	r17, 0xFF	; 255
 910:	1e 15       	cp	r17, r14
 912:	c0 f3       	brcs	.-16     	; 0x904 <__stack+0x5>
 914:	04 c0       	rjmp	.+8      	; 0x91e <__stack+0x1f>
 916:	1e 15       	cp	r17, r14
 918:	10 f4       	brcc	.+4      	; 0x91e <__stack+0x1f>
 91a:	e1 1a       	sub	r14, r17
 91c:	01 c0       	rjmp	.+2      	; 0x920 <__stack+0x21>
 91e:	ee 24       	eor	r14, r14
 920:	04 ff       	sbrs	r16, 4
 922:	0f c0       	rjmp	.+30     	; 0x942 <__stack+0x43>
 924:	80 e3       	ldi	r24, 0x30	; 48
 926:	90 e0       	ldi	r25, 0x00	; 0
 928:	b3 01       	movw	r22, r6
 92a:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <fputc>
 92e:	02 ff       	sbrs	r16, 2
 930:	1d c0       	rjmp	.+58     	; 0x96c <__stack+0x6d>
 932:	01 fd       	sbrc	r16, 1
 934:	03 c0       	rjmp	.+6      	; 0x93c <__stack+0x3d>
 936:	88 e7       	ldi	r24, 0x78	; 120
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	0e c0       	rjmp	.+28     	; 0x958 <__stack+0x59>
 93c:	88 e5       	ldi	r24, 0x58	; 88
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	0b c0       	rjmp	.+22     	; 0x958 <__stack+0x59>
 942:	80 2f       	mov	r24, r16
 944:	86 78       	andi	r24, 0x86	; 134
 946:	91 f0       	breq	.+36     	; 0x96c <__stack+0x6d>
 948:	01 ff       	sbrs	r16, 1
 94a:	02 c0       	rjmp	.+4      	; 0x950 <__stack+0x51>
 94c:	8b e2       	ldi	r24, 0x2B	; 43
 94e:	01 c0       	rjmp	.+2      	; 0x952 <__stack+0x53>
 950:	80 e2       	ldi	r24, 0x20	; 32
 952:	f7 fc       	sbrc	r15, 7
 954:	8d e2       	ldi	r24, 0x2D	; 45
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	b3 01       	movw	r22, r6
 95a:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <fputc>
 95e:	06 c0       	rjmp	.+12     	; 0x96c <__stack+0x6d>
 960:	80 e3       	ldi	r24, 0x30	; 48
 962:	90 e0       	ldi	r25, 0x00	; 0
 964:	b3 01       	movw	r22, r6
 966:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <fputc>
 96a:	9a 94       	dec	r9
 96c:	d9 14       	cp	r13, r9
 96e:	c0 f3       	brcs	.-16     	; 0x960 <__stack+0x61>
 970:	da 94       	dec	r13
 972:	f1 01       	movw	r30, r2
 974:	ed 0d       	add	r30, r13
 976:	f1 1d       	adc	r31, r1
 978:	80 81       	ld	r24, Z
 97a:	90 e0       	ldi	r25, 0x00	; 0
 97c:	b3 01       	movw	r22, r6
 97e:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <fputc>
 982:	dd 20       	and	r13, r13
 984:	a9 f7       	brne	.-22     	; 0x970 <__stack+0x71>
 986:	06 c0       	rjmp	.+12     	; 0x994 <__stack+0x95>
 988:	80 e2       	ldi	r24, 0x20	; 32
 98a:	90 e0       	ldi	r25, 0x00	; 0
 98c:	b3 01       	movw	r22, r6
 98e:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <fputc>
 992:	ea 94       	dec	r14
 994:	ee 20       	and	r14, r14
 996:	c1 f7       	brne	.-16     	; 0x988 <__stack+0x89>
 998:	43 ce       	rjmp	.-890    	; 0x620 <vfprintf+0x30>
 99a:	f3 01       	movw	r30, r6
 99c:	66 81       	ldd	r22, Z+6	; 0x06
 99e:	77 81       	ldd	r23, Z+7	; 0x07
 9a0:	cb 01       	movw	r24, r22
 9a2:	2b 96       	adiw	r28, 0x0b	; 11
 9a4:	e2 e1       	ldi	r30, 0x12	; 18
 9a6:	0c 94 91 05 	jmp	0xb22	; 0xb22 <__epilogue_restores__>

000009aa <strnlen_P>:
 9aa:	fc 01       	movw	r30, r24
 9ac:	05 90       	lpm	r0, Z+
 9ae:	61 50       	subi	r22, 0x01	; 1
 9b0:	70 40       	sbci	r23, 0x00	; 0
 9b2:	01 10       	cpse	r0, r1
 9b4:	d8 f7       	brcc	.-10     	; 0x9ac <strnlen_P+0x2>
 9b6:	80 95       	com	r24
 9b8:	90 95       	com	r25
 9ba:	8e 0f       	add	r24, r30
 9bc:	9f 1f       	adc	r25, r31
 9be:	08 95       	ret

000009c0 <strnlen>:
 9c0:	fc 01       	movw	r30, r24
 9c2:	61 50       	subi	r22, 0x01	; 1
 9c4:	70 40       	sbci	r23, 0x00	; 0
 9c6:	01 90       	ld	r0, Z+
 9c8:	01 10       	cpse	r0, r1
 9ca:	d8 f7       	brcc	.-10     	; 0x9c2 <strnlen+0x2>
 9cc:	80 95       	com	r24
 9ce:	90 95       	com	r25
 9d0:	8e 0f       	add	r24, r30
 9d2:	9f 1f       	adc	r25, r31
 9d4:	08 95       	ret

000009d6 <fputc>:
 9d6:	0f 93       	push	r16
 9d8:	1f 93       	push	r17
 9da:	cf 93       	push	r28
 9dc:	df 93       	push	r29
 9de:	8c 01       	movw	r16, r24
 9e0:	eb 01       	movw	r28, r22
 9e2:	8b 81       	ldd	r24, Y+3	; 0x03
 9e4:	81 ff       	sbrs	r24, 1
 9e6:	1b c0       	rjmp	.+54     	; 0xa1e <fputc+0x48>
 9e8:	82 ff       	sbrs	r24, 2
 9ea:	0d c0       	rjmp	.+26     	; 0xa06 <fputc+0x30>
 9ec:	2e 81       	ldd	r18, Y+6	; 0x06
 9ee:	3f 81       	ldd	r19, Y+7	; 0x07
 9f0:	8c 81       	ldd	r24, Y+4	; 0x04
 9f2:	9d 81       	ldd	r25, Y+5	; 0x05
 9f4:	28 17       	cp	r18, r24
 9f6:	39 07       	cpc	r19, r25
 9f8:	64 f4       	brge	.+24     	; 0xa12 <fputc+0x3c>
 9fa:	e8 81       	ld	r30, Y
 9fc:	f9 81       	ldd	r31, Y+1	; 0x01
 9fe:	01 93       	st	Z+, r16
 a00:	f9 83       	std	Y+1, r31	; 0x01
 a02:	e8 83       	st	Y, r30
 a04:	06 c0       	rjmp	.+12     	; 0xa12 <fputc+0x3c>
 a06:	e8 85       	ldd	r30, Y+8	; 0x08
 a08:	f9 85       	ldd	r31, Y+9	; 0x09
 a0a:	80 2f       	mov	r24, r16
 a0c:	09 95       	icall
 a0e:	89 2b       	or	r24, r25
 a10:	31 f4       	brne	.+12     	; 0xa1e <fputc+0x48>
 a12:	8e 81       	ldd	r24, Y+6	; 0x06
 a14:	9f 81       	ldd	r25, Y+7	; 0x07
 a16:	01 96       	adiw	r24, 0x01	; 1
 a18:	9f 83       	std	Y+7, r25	; 0x07
 a1a:	8e 83       	std	Y+6, r24	; 0x06
 a1c:	02 c0       	rjmp	.+4      	; 0xa22 <fputc+0x4c>
 a1e:	0f ef       	ldi	r16, 0xFF	; 255
 a20:	1f ef       	ldi	r17, 0xFF	; 255
 a22:	c8 01       	movw	r24, r16
 a24:	df 91       	pop	r29
 a26:	cf 91       	pop	r28
 a28:	1f 91       	pop	r17
 a2a:	0f 91       	pop	r16
 a2c:	08 95       	ret

00000a2e <__ultoa_invert>:
 a2e:	fa 01       	movw	r30, r20
 a30:	aa 27       	eor	r26, r26
 a32:	28 30       	cpi	r18, 0x08	; 8
 a34:	51 f1       	breq	.+84     	; 0xa8a <__ultoa_invert+0x5c>
 a36:	20 31       	cpi	r18, 0x10	; 16
 a38:	81 f1       	breq	.+96     	; 0xa9a <__ultoa_invert+0x6c>
 a3a:	e8 94       	clt
 a3c:	6f 93       	push	r22
 a3e:	6e 7f       	andi	r22, 0xFE	; 254
 a40:	6e 5f       	subi	r22, 0xFE	; 254
 a42:	7f 4f       	sbci	r23, 0xFF	; 255
 a44:	8f 4f       	sbci	r24, 0xFF	; 255
 a46:	9f 4f       	sbci	r25, 0xFF	; 255
 a48:	af 4f       	sbci	r26, 0xFF	; 255
 a4a:	b1 e0       	ldi	r27, 0x01	; 1
 a4c:	3e d0       	rcall	.+124    	; 0xaca <__ultoa_invert+0x9c>
 a4e:	b4 e0       	ldi	r27, 0x04	; 4
 a50:	3c d0       	rcall	.+120    	; 0xaca <__ultoa_invert+0x9c>
 a52:	67 0f       	add	r22, r23
 a54:	78 1f       	adc	r23, r24
 a56:	89 1f       	adc	r24, r25
 a58:	9a 1f       	adc	r25, r26
 a5a:	a1 1d       	adc	r26, r1
 a5c:	68 0f       	add	r22, r24
 a5e:	79 1f       	adc	r23, r25
 a60:	8a 1f       	adc	r24, r26
 a62:	91 1d       	adc	r25, r1
 a64:	a1 1d       	adc	r26, r1
 a66:	6a 0f       	add	r22, r26
 a68:	71 1d       	adc	r23, r1
 a6a:	81 1d       	adc	r24, r1
 a6c:	91 1d       	adc	r25, r1
 a6e:	a1 1d       	adc	r26, r1
 a70:	20 d0       	rcall	.+64     	; 0xab2 <__ultoa_invert+0x84>
 a72:	09 f4       	brne	.+2      	; 0xa76 <__ultoa_invert+0x48>
 a74:	68 94       	set
 a76:	3f 91       	pop	r19
 a78:	2a e0       	ldi	r18, 0x0A	; 10
 a7a:	26 9f       	mul	r18, r22
 a7c:	11 24       	eor	r1, r1
 a7e:	30 19       	sub	r19, r0
 a80:	30 5d       	subi	r19, 0xD0	; 208
 a82:	31 93       	st	Z+, r19
 a84:	de f6       	brtc	.-74     	; 0xa3c <__ultoa_invert+0xe>
 a86:	cf 01       	movw	r24, r30
 a88:	08 95       	ret
 a8a:	46 2f       	mov	r20, r22
 a8c:	47 70       	andi	r20, 0x07	; 7
 a8e:	40 5d       	subi	r20, 0xD0	; 208
 a90:	41 93       	st	Z+, r20
 a92:	b3 e0       	ldi	r27, 0x03	; 3
 a94:	0f d0       	rcall	.+30     	; 0xab4 <__ultoa_invert+0x86>
 a96:	c9 f7       	brne	.-14     	; 0xa8a <__ultoa_invert+0x5c>
 a98:	f6 cf       	rjmp	.-20     	; 0xa86 <__ultoa_invert+0x58>
 a9a:	46 2f       	mov	r20, r22
 a9c:	4f 70       	andi	r20, 0x0F	; 15
 a9e:	40 5d       	subi	r20, 0xD0	; 208
 aa0:	4a 33       	cpi	r20, 0x3A	; 58
 aa2:	18 f0       	brcs	.+6      	; 0xaaa <__ultoa_invert+0x7c>
 aa4:	49 5d       	subi	r20, 0xD9	; 217
 aa6:	31 fd       	sbrc	r19, 1
 aa8:	40 52       	subi	r20, 0x20	; 32
 aaa:	41 93       	st	Z+, r20
 aac:	02 d0       	rcall	.+4      	; 0xab2 <__ultoa_invert+0x84>
 aae:	a9 f7       	brne	.-22     	; 0xa9a <__ultoa_invert+0x6c>
 ab0:	ea cf       	rjmp	.-44     	; 0xa86 <__ultoa_invert+0x58>
 ab2:	b4 e0       	ldi	r27, 0x04	; 4
 ab4:	a6 95       	lsr	r26
 ab6:	97 95       	ror	r25
 ab8:	87 95       	ror	r24
 aba:	77 95       	ror	r23
 abc:	67 95       	ror	r22
 abe:	ba 95       	dec	r27
 ac0:	c9 f7       	brne	.-14     	; 0xab4 <__ultoa_invert+0x86>
 ac2:	00 97       	sbiw	r24, 0x00	; 0
 ac4:	61 05       	cpc	r22, r1
 ac6:	71 05       	cpc	r23, r1
 ac8:	08 95       	ret
 aca:	9b 01       	movw	r18, r22
 acc:	ac 01       	movw	r20, r24
 ace:	0a 2e       	mov	r0, r26
 ad0:	06 94       	lsr	r0
 ad2:	57 95       	ror	r21
 ad4:	47 95       	ror	r20
 ad6:	37 95       	ror	r19
 ad8:	27 95       	ror	r18
 ada:	ba 95       	dec	r27
 adc:	c9 f7       	brne	.-14     	; 0xad0 <__ultoa_invert+0xa2>
 ade:	62 0f       	add	r22, r18
 ae0:	73 1f       	adc	r23, r19
 ae2:	84 1f       	adc	r24, r20
 ae4:	95 1f       	adc	r25, r21
 ae6:	a0 1d       	adc	r26, r0
 ae8:	08 95       	ret

00000aea <__prologue_saves__>:
 aea:	2f 92       	push	r2
 aec:	3f 92       	push	r3
 aee:	4f 92       	push	r4
 af0:	5f 92       	push	r5
 af2:	6f 92       	push	r6
 af4:	7f 92       	push	r7
 af6:	8f 92       	push	r8
 af8:	9f 92       	push	r9
 afa:	af 92       	push	r10
 afc:	bf 92       	push	r11
 afe:	cf 92       	push	r12
 b00:	df 92       	push	r13
 b02:	ef 92       	push	r14
 b04:	ff 92       	push	r15
 b06:	0f 93       	push	r16
 b08:	1f 93       	push	r17
 b0a:	cf 93       	push	r28
 b0c:	df 93       	push	r29
 b0e:	cd b7       	in	r28, 0x3d	; 61
 b10:	de b7       	in	r29, 0x3e	; 62
 b12:	ca 1b       	sub	r28, r26
 b14:	db 0b       	sbc	r29, r27
 b16:	0f b6       	in	r0, 0x3f	; 63
 b18:	f8 94       	cli
 b1a:	de bf       	out	0x3e, r29	; 62
 b1c:	0f be       	out	0x3f, r0	; 63
 b1e:	cd bf       	out	0x3d, r28	; 61
 b20:	09 94       	ijmp

00000b22 <__epilogue_restores__>:
 b22:	2a 88       	ldd	r2, Y+18	; 0x12
 b24:	39 88       	ldd	r3, Y+17	; 0x11
 b26:	48 88       	ldd	r4, Y+16	; 0x10
 b28:	5f 84       	ldd	r5, Y+15	; 0x0f
 b2a:	6e 84       	ldd	r6, Y+14	; 0x0e
 b2c:	7d 84       	ldd	r7, Y+13	; 0x0d
 b2e:	8c 84       	ldd	r8, Y+12	; 0x0c
 b30:	9b 84       	ldd	r9, Y+11	; 0x0b
 b32:	aa 84       	ldd	r10, Y+10	; 0x0a
 b34:	b9 84       	ldd	r11, Y+9	; 0x09
 b36:	c8 84       	ldd	r12, Y+8	; 0x08
 b38:	df 80       	ldd	r13, Y+7	; 0x07
 b3a:	ee 80       	ldd	r14, Y+6	; 0x06
 b3c:	fd 80       	ldd	r15, Y+5	; 0x05
 b3e:	0c 81       	ldd	r16, Y+4	; 0x04
 b40:	1b 81       	ldd	r17, Y+3	; 0x03
 b42:	aa 81       	ldd	r26, Y+2	; 0x02
 b44:	b9 81       	ldd	r27, Y+1	; 0x01
 b46:	ce 0f       	add	r28, r30
 b48:	d1 1d       	adc	r29, r1
 b4a:	0f b6       	in	r0, 0x3f	; 63
 b4c:	f8 94       	cli
 b4e:	de bf       	out	0x3e, r29	; 62
 b50:	0f be       	out	0x3f, r0	; 63
 b52:	cd bf       	out	0x3d, r28	; 61
 b54:	ed 01       	movw	r28, r26
 b56:	08 95       	ret

00000b58 <_exit>:
 b58:	f8 94       	cli

00000b5a <__stop_program>:
 b5a:	ff cf       	rjmp	.-2      	; 0xb5a <__stop_program>
